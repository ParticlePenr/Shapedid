@using Core
@model OfferAddOrEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>
    @(Model.AddsNew ? "Add a new product" : "Edit product")
</h1>
@Html.ValidationSummary(true)
<br>
<div class="accountInfo">
    @using (Html.BeginForm(FormMethod.Post))
    {
    <fieldset>
        <legend>Product information</legend>
        @if (!Model.AddsNew)
        {
            @Html.HiddenFor(m => m.Offer.ProductId)
            @Html.HiddenFor(m => m.Offer.SupplierId)
            <p>
                @Html.LabelFor(m => m.Offer.ProductId)
                <span class="textEntry">@Model.Offer.ProductId</span>
            </p>
        }
        <p>
            @Html.LabelFor(m => m.Offer.ProductName)
            @Html.TextBoxFor(m => m.Offer.ProductName, new { @value = Model.Offer?.ProductName })
            @Html.ValidationMessageFor(m => m.Offer.ProductName)
        </p>
        <p>
            @Html.LabelFor(m => m.Offer.Category)
            <br>
            <select asp-for="Offer.CategoryId">
                @foreach (var category in Model.ProductCategories)
                {
                    <option value="@category.CategoryId"
                            title="@category.Description"
                            selected=@(Model.Offer?.CategoryId == category.CategoryId ? "selected" : null)>
                        @category.CategoryName
                    </option>
                }
            </select>
        </p>
        <p>
            @Html.LabelFor(m => m.Offer.QuantityPerUnit)
            @Html.TextBoxFor(m => m.Offer.QuantityPerUnit, new { @value = Model.Offer?.QuantityPerUnit })
            @Html.ValidationMessageFor(m => m.Offer.QuantityPerUnit)
        </p>
        <p>
            @Html.LabelFor(m => m.Offer.UnitPrice)
            @Html.TextBoxFor(m => m.Offer.UnitPrice, new { @value = Model.Offer?.UnitPrice })
            @Html.ValidationMessageFor(m => m.Offer.UnitPrice)
        </p>
        <p>
            @Html.LabelFor(m => m.Offer.UnitsInStock)
            @Html.TextBoxFor(m => m.Offer.UnitsInStock, new { @value = Model.Offer?.UnitsInStock })
            @Html.ValidationMessageFor(m => m.Offer.UnitsInStock)
        </p>
        <p>
            @Html.LabelFor(m => m.Offer.UnitsOnOrder)
            @Html.TextBoxFor(m => m.Offer.UnitsOnOrder, new { @value = Model.Offer?.UnitsOnOrder })
            @Html.ValidationMessageFor(m => m.Offer.UnitsOnOrder)
        </p>
        <p>
            @Html.LabelFor(m => m.Offer.ReorderLevel)
            @Html.TextBoxFor(m => m.Offer.ReorderLevel, new { @value = Model.Offer?.ReorderLevel })
            @Html.ValidationMessageFor(m => m.Offer.ReorderLevel)
        </p>
        @if (Model.AddsNew)
        {
            <p>
                @Html.LabelFor(m => m.Offer.Supplier)
                <br>
                <select asp-for="Offer.SupplierId">
                    @foreach (var supplier in Model.Suppliers)
                    {
                        <option value="@supplier.SupplierId">
                            @supplier.CompanyName
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.Offer.Supplier)
            </p>
        }
        <p>
            @Html.CheckBoxFor(m => m.Offer.Discontinued, new { @checked = Model.Offer?.Discontinued ?? false })
            @Html.LabelFor(m => m.Offer.Discontinued)
        </p>
    </fieldset>
    <p class="submitButton">
        <input type="submit" value="Save changes">
    </p>
    }
</div>